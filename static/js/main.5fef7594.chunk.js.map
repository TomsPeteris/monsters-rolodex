{"version":3,"sources":["components/card/CardComponent.jsx","components/card-list/CardListComponent.jsx","components/search-box/SearchBoxComponent.jsx","App.js","logo.svg","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","handleChange","App","state","searchField","fetch","then","response","json","users","setState","this","filterMonsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAKaA,EAAO,SAAAC,GAAK,OACvB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,4BAEL,6BAAML,EAAMI,QAAQE,OACpB,4BAAKN,EAAMI,QAAQG,YCJVC,G,MAAW,SAAAR,GAAK,OAC5B,qBAAKC,UAAU,YAAf,SAEED,EAAMS,SAASC,KACd,SAAAN,GAAO,OACN,cAAC,EAAD,CAAyBA,QAAUA,GAAvBA,EAAQC,WCRZM,G,MAAY,SAAAX,GAAK,OAC7B,uBACCY,KAAK,SACLC,YAAcb,EAAMa,YACpBC,SAAWd,EAAMe,aACjBd,UAAU,aCsCGe,G,MChDA,I,kDDcb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAG7C,WAAU,IAAD,SAC2BE,KAAKR,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZQ,EAAiBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC5CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAK3B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEY,YAAY,kBACZE,aAAe,SAAAe,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE5D,cAAC,EAAD,CAAUvB,SAAWiB,W,GA7BXO,IAAMC,YEATC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5fef7594.chunk.js","sourcesContent":["import React from \"react\"\n\n// Assets\nimport \"./CardStyle.css\"\n\nexport const Card = props => (\n  <div className=\"card-container\">\n    <img \n      alt=\"monster\" \n      src={`https://robohash.org/${ props.monster.id }?set=set2&size=180x180`} \n    />\n    <h2>{ props.monster.name }</h2>\n    <p>{ props.monster.email }</p>\n  </div>\n)\n","import React from \"react\"\n\n// Components\nimport { Card } from \"../card/CardComponent\"\n\n// Assets\nimport \"./CardListStyle.css\"\n\nexport const CardList = props => (\n\t<div className=\"card-list\">\n\t\t{\n\t\t\tprops.monsters.map(\n\t\t\t\tmonster => (\n\t\t\t\t\t<Card key={ monster.id } monster={ monster } />\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t</div>\n)\n","import React from \"react\"\n\n// Assets\nimport \"./SearchBoxStyle.css\"\n\nexport const SearchBox = props => (\n\t<input \n\t\ttype=\"search\" \n\t\tplaceholder={ props.placeholder } \n\t\tonChange={ props.handleChange  }\n\t\tclassName=\"search\"\n\t/>\n)\n","import React from \"react\"\n\n// Components\nimport { CardList } from \"./components/card-list/CardListComponent\"\nimport { SearchBox } from \"./components/search-box/SearchBoxComponent\"\n\n// Assets\nimport \"./App.css\"\nimport logo from \"./logo.svg\"\n\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n\n  render() {\n    const { monsters, searchField } = this.state\n    const filterMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n        <SearchBox \n          placeholder=\"Search monsters\"\n          handleChange={ e => this.setState({ searchField: e.target.value }) } \n        />\n        <CardList monsters={ filterMonsters } />\n      </div>\n    );\n  }\n\n}\n\nexport default App\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}